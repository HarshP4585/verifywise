import { TopicStructEU } from "../../models/EU/topicStructEU.model";
import { SubtopicStructEU } from "../../models/EU/subTopicStructEU.model";
import { QuestionStructEU } from "../../models/EU/questionStructEU.model";
import { getAssessmentReportQuery } from "../../utils/reporting.utils";

interface reportBodyData {
  projectTitle: string,
  projectOwner: string
}

type Question = QuestionStructEU & {
  answer: string;
};

type SubTopic = SubtopicStructEU & {
  questions: Question[];
};

type UserWithSubjects = TopicStructEU & {
  subtopics: SubTopic[];
};

export async function getAssessmentTrackerMarkdown (
  projectId: number,
  frameworkId: number,
  data: reportBodyData
) : Promise<any> {
let rows: string;
const reportData = await getAssessmentReportQuery(frameworkId) as UserWithSubjects[];

if (reportData.length > 0) {
    rows = reportData.map(assessment =>{
      let subTopic: any;
      if(assessment.subtopics){
        subTopic = assessment.subtopics?.length > 0
        ? assessment.subtopics.map((subtopic) => {
          const questionList = subtopic.questions?.length > 0
            ? subtopic.questions.map((q, i) =>
                `${i + 1}. __${q.question}__<br>${q.answer || '(no answer)'}`).join('\n')
            : `- No questions`;
          return `  - ${subtopic.title}\n${questionList}\n`;
        }).join('\n')
        
        : `- No data`;
      }
      return `__${assessment?.title}__\n${subTopic}\n`;
    }).join('\n');
} else {
  rows = `-`
}

const assessmentMD = `
VerifyWise assessment tracker report
========================

This report is generated by the VeriftyWise Assessment Tracker. It aims to provide a way to demonstrate their claims about the risks of their AI systems.

- **Date** ${new Date().toLocaleDateString()}
- **Project** ${data.projectTitle}
- **Owner** ${data.projectOwner}

${rows}
`
return assessmentMD;
}