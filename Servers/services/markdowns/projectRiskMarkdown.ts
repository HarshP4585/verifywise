/**
 * Generates a markdown report for project risks
 * @param projectId - The ID of the project
 * @param data - Project metadata including title and owner
 * @returns Promise<string> - Markdown formatted vendor risk report
 */

import { getProjectRisksReportQuery } from "../../utils/reporting.utils";
import {reportBodyData} from '../reportService';

export async function getProjectRiskMarkdown (
    projectId: number,
    data: reportBodyData
  ) : Promise<any> {
  let rows: string;
  const reportData = await getProjectRisksReportQuery(projectId);

  if (reportData.length > 0) {
    rows = reportData.map((risk: { risk_name: any; risk_owner: any; risk_severity: any; likelihood: any; approval_status: any; risk_level_autocalculated: any; deadline: { toLocaleDateString: () => any; }; }) => 
      `| ${risk.risk_name} | ${risk.risk_owner} | ${risk.risk_severity} | ${risk.likelihood} | ${risk.approval_status} | ${risk.risk_level_autocalculated} | ${risk.deadline.toLocaleDateString()} |`
    ).join('\n');
  } else {
    rows = `| - | - | - | - | - | - | - |`
  }

  const projectRiskMD = `
VerifyWise project risk report
========================

This report is generated by the VeriftyWise Project Risk. It aims to provide a way to demonstrate their claims about the risks of their AI systems.
  
- **Date** ${new Date().toLocaleDateString()}
- **Project** ${data.projectTitle}
- **Owner** ${data.projectOwner}

Project risk table
-------------
| Risk Name | Owner | Severity | Likelihood | Mitigation Status	| Risk Level | Target Date | 
|----|----|----|----|----|----|----|
${rows}
`
  return projectRiskMD;
}